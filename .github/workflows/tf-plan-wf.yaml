name: "Terraform plan workflow"

on:
  workflow_call:
    inputs:
      stage:
        required: true
        type: string

jobs:
  checkchanges:
    name: "Check for changes in TF files"
    runs-on: ubuntu-latest
    outputs:
      diff: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.2.0
        with:
          files: |
            *.tf

      - name: Check for relevant changes
        if: steps.changed-files.outputs.any_changed == 'false'
        run: echo "No changes on any tf file. Skipping plan / apply"

  terraform:
    name: "Terraform"
    needs: [checkchanges]
    if: needs.checkchanges.outputs.diff == 'true'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.3.2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        timeout-minutes: 20
        run: terraform plan -no-color -lock=false -var-file=${{inputs.stage}}
        continue-on-error: true

      - name: Santitize Plan
        if: github.event_name == 'pull_request'
        id: sanitizePlan
        run: |
          sanitizedPlan=$(echo "${{ steps.plan.outputs.stdout }}" | grep -v 'Refreshing state...' | grep -v 'Reading...' | grep -v 'Read complete')
          sanitizedPlan="${sanitizedPlan//'%'/'%25'}"
          sanitizedPlan="${sanitizedPlan//$'\n'/'%0A'}"
          sanitizedPlan="${sanitizedPlan//$'\r'/'%0D'}"
          echo "sanitizedPlan=$sanitizedPlan" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Terraform plan comment to PR
        uses: actions/github-script@v6.4.0
        if: github.event_name == 'pull_request'
        env:
          SANITIZED_PLAN: "terraform\n${{ steps.sanitizePlan.outputs.sanitizedPlan }}"
        with:
          script: |
            const output = `### ${{inputs.working_dir}}
            #### Terraform Format and Style ðŸ–Œ\`success\`
            #### Terraform Initialization \`${{ steps.init.outcome }}\`
            #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.SANITIZED_PLAN}\`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
